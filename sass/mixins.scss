@mixin grid {
  // set up grid
  .grid {
    display: grid;
    max-width: 100%;
    background-color: #26262673;
    padding: 3rem 1rem;
  }
  // grid items consistent style
  .gridItem {
    position: relative;
    grid-row: span 1;
    max-width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 6rem 0.3rem 0.3rem;
    border: 1px solid rgba(222, 222, 222, 0.174);
    opacity: 80%;
  }
  @media screen and (max-width: 1000px) {
    //grid format 1col
    .grid {
      display: grid;
      grid-template-columns: 1fr;
    }
  }
  @media screen and (min-width: 1001px) {
    //grid format 2col
    .grid {
      display: grid;
      max-width: 100%;
      grid-template-columns: 1fr 1fr;
    }
  }
}
@mixin sidebar {
  //format the sidebar, fixed on side
  .sidebar {
    z-index: 1;
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    background-color: darken($bgColor1, 50);

    height: 100%;
    width: 220px;
    padding-top: 15vh;
    flex-direction: column;
  }
  //format the elements inside the sidebar
  .sidebar img {
    width: 160px;
    border-radius: 50%;
    filter: grayscale(100%);
  }
  .sidebarCap {
    align-items: center;
    width: 80%;
    margin: 10px auto;
  }
  @media screen and (max-width: 700px) {
    //fixed on top when width is under 700px
    .sidebar {
      height: 120px;
      width: 100%;
      padding-top: 1%;
      display: block;
    }
    //format the elements inside the sidebar
    .sidebar img {
      display: inline-block;
      width: 80px;
      margin: 1rem;
      border-radius: 50%;
    }
    .sidebarCap {
      position: absolute;
      top: 5px;
      left: 7rem;
    }
    //fix the margins on the header and main content
    header {
      margin-left: 0px;
      margin-top: 120px;
    }
    .main {
      margin-left: 0px;
    }
  }
}
@mixin columns {
  //fixing the columns inside the grid items
  @media screen and (max-width: 1400px) {
    //grid item content in a single column
    .container {
      display: flex;
      flex-direction: column;
      align-content: center;
    }
    .column {
      max-width: 80%;
      margin: 0px auto;
    }
  }

  @media screen and (min-width: 1401px) {
    //grid item content side by side
    .container {
      display: flex;
    }
    .text {
      flex: 40%;
      margin: 5px;
      padding: 0.8rem;
    }
    .image {
      flex: 60%;
    }
  }
}
// variables relisted for the conditional statement
// it will not work unless i have the variables listed twice
$gridCount: 4;
$figColor: #b4b4b4;
$bgColor1: #413e5b;
$bgColor2: #63546e;
$brightgold: #ffc904;
$metallicgold: #ba9b37;

@for $i from 1 through $gridCount {
  //set the formatting for the grid items on the right side
  @if $i % 2 == 0 {
    .i#{$i} {
      background-color: rgba(darken($bgColor2, (6 * $i)), 0.4);
    }
    .i#{$i} figure {
      background-color: lighten($figColor, ($i/3));
    }
    .i#{$i} figcaption {
      color: darken($brightgold, (20 * $i));
    }
  } @else {
    //set the formatting for the grid items on the left side
    .i#{$i} {
      background-color: rgba(darken($bgColor1, (7 * $i)), 0.5);
    }
    .i#{$i} figure {
      background-color: darken($figColor, ($i * 3));
    }
    .i#{$i} figcaption {
      color: darken($metallicgold, (30 * $i));
    }
  }
}
